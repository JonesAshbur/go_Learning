package main

import "fmt"

func main() {
	fmt.Println("hello world")
}

/*

	go语言特点：
	1.go语言的每个文件都属于一个包，不能单独存在
	2.自动垃圾回收机制
	3.天然并发（语言层面支持）
	4.goroutine，轻量级线程，可实现高并发处理，高效利用多核
	5.基于CPS并发模型实现
	6.吸收了管道通信机制，形成了go语言特有管道channel，可实现不同goroute之间的相互通信
	7.函数可以返回多个值
	8.切片slice，延时执行defer

	编译注意事项：
	1.通过go build编译生成.exe可执行文件
	2.go run 命令可直接运行.go源文件，比直接编译要慢（类似于执行脚本文件，先编译后运行），实际开发过程中都要先进行编译
	3.可执行文件和go run 的区别：可执行文件可以运行在没有go编译器的环境下，但是go run指令的执行必须在有go编译器的环境下
	4.编译时，编译器会将程序运行时所依赖的库文件包含在可执行文件中，相较于源文件，可执行文件体积要大
	5.ex：go build -o xxx.exe hello.go 以xxx作为可执行文件的文件名

	注意事项：
	1.源代码以.go为拓展名
	2.Go应用程序的执行入口是main()函数
	3.Go语言严格区分大小写
	4.语句后面不需要加分号，编译器自动添加
	5.Go编译器逐行进行编译，每行只写一条语句（用分号相隔可以写多条）
	6.Go语言定义的变量或者import的包如果没有使用，不能编译通过
	7.括号成对出现

*/
