package main

func main() {

	// 传统测试方法的缺点：测试过程不方便，不利于管理
	// go语言自带轻量级测试框架testing和go test命令来实现单元测试和性能测试
	// 可以基于框架写针对某个函数的测试用例，也可以基于该框架写相应的压力测试用例
	// 通过单元测试可以解决：
	// 1.确保每个函数是可运行并且运行结果是正确的
	// 2.确保代码性能最优
	// 3.及时发现程序设计错误或逻辑错误，性能测试则让程序能在高并发下稳定运行

	// 总结：
	// 1.测试用例文件名必须以_test.go结尾
	// 2.测试用例函数必须以Test开头，一般来说是Test + 被测试函数名
	// 3.测试用例函数的形参类型必须是 *testing.T
	// 4.一个测试用例文件中，可以含有多个测试用例函数
	// 5.指令：go test 运行正确，无日志输出，错误时会输出日志
	// 				go test -v无论对错都会输出日志
	// 6.出现错误时，使用t.Fatalf来格式化输出错误信息，并且退出程序
	// 7.t.Logf可以输出相应的日志
	// 8.测试用例函数无需在main函数中调用也可以执行
	// 9.PASS表示测试用例运行成功，FAIL表示运行失败
	// 10.测试单个文件一定要带上被测试的源文件  go test -v calculate_test.go calculate.go
	// 11.测试单个方法 go test -v -test.run TestAddupper
}
